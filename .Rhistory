getwd()
setwd('C:/Users/avas4/github_project/pdsnd_github')
getwd()
ny = read.csv('new_york_city.csv')
wash = read.csv('washington.csv')
chi = read.csv('chicago.csv')
head(ny)
head(wash)
head(chi)
# check the dimension of each file
dim(ny)
dim(wash)
dim(chi)
nrow(wash)/(nrow(ny)+nrow(wash)+nrow(chi))
# select only relevant columns
sel_cols <- c("Start.Time",
"Start.Station","End.Station",
"Trip.Duration","User.Type")
# List of files
list_of_files <- list(ny,wash,chi)
#  List of cities
name_of_cities <- c('New York','Washington','Chicago')
# function to keep only selected columns in a specified dataframe
mod_df <- function(file,cols){
new_file <- subset(file,select = (names(file) %in% sel_cols))
return(new_file)
}
# function to concatenate files in a given list of dataframes
# and only keep specified columns
mer_df <- function(files,cities,cols){
new_file <- NULL
for (i in (1:length(files))) {
temp_file <- mod_df(files[[i]],cols)
temp_file$city <- cities[i]
new_file <- rbind(new_file,temp_file)
print(dim(new_file))
}
return(new_file)
}
# concatenating the three files into one using the mer_df function
cities3 <- mer_df(list_of_files,name_of_cities,sel_cols)
# check the contents of the new file
head(cities3)
library(ggplot2)
library(dplyr)
# Set up required variables (month, weekday, hour) in the dataset
cities3$month <- as.integer(format(as.Date(cities3$Start.Time,
format="%Y-%m-%d"),"%m"))
cities3$weekday <- format(as.Date(cities3$Start.Time,
format="%Y-%m-%d"),"%a")
cities3$hour <- as.integer(substr(cities3$Start.Time, 12, 13))
# check that the new variables have been created correctly
head(cities3)
# create the function, check_for_na, to check for any NA values
# in a specified dataset
check_for_na <- function(filenm){
for (i in (1:length(filenm))) {
if (any(is.na(filenm[,i]))) {
print(names(filenm[i]))
}
}
}
# check to see if there any NA values in the specified dataset
# by running the function, check_for_na
check_for_na(cities3)
# investigate rows with a NA value in the variable, Trip.Duration
subset(cities3,is.na(cities3$Trip.Duration))
# investigate rows with a NA value in the variable, month
subset(cities3,is.na(cities3$month))
# remove one row where there are NAs values in the month field
dim(cities3)
cities3_orig  <- cities3 # keep a copy of the unmodified cities3 file just in case we need it later
cities3 <- subset(cities3,!is.na(cities3$month))
dim(cities3)
check_for_na(cities3)
# check out some count statistics
print('count by month')
table(cities3$month)
print('count by week day')
table(cities3$weekday)
print('count by hour')
table(cities3$hour)
print('count by month and city')
table(cities3$month,cities3$city)
print('count by week day and city')
table(cities3$weekday,cities3$city)
print('count by hour and city')
table(cities3$hour,cities3$city)
# Histogram plot function for continuous variable - not split by city
Hist_cont <- function(filenm,var,bin_width=1,break_no=31,x_desc){
ggplot(aes(x = var), data = filenm) +
geom_histogram(binwidth = bin_width, color='blue') +
scale_x_continuous(breaks = 1:break_no) +
ggtitle(paste('Number of trips by',x_desc)) +
ylab('Number of Trips') +
xlab(x_desc)
}
# Histogram plot function for continuous variable - split by city
Hist_cont_groupby <- function(filenm,var,bin_width=1,break_no=31,x_desc){
ggplot(aes(x = var), data = filenm) +
geom_histogram(binwidth = bin_width, color='blue') +
scale_x_continuous(breaks = 1:break_no) +
facet_wrap(~filenm$city,ncol=2) +
ggtitle(paste('Number of trips by City and',x_desc)) +
ylab('Number of Trips') +
xlab(x_desc)
}
# Histogram plot function for discrete variable - not split by city
Hist_disc <-  function(filenm,var,x_desc) {
ggplot(aes(x = var), data = filenm) +
geom_bar() +
ggtitle(paste('Number of trips by',x_desc)) +
ylab('Number of Trips') +
xlab(x_desc)
}
# Histogram plot function for discrete variable - split by city
Hist_disc_groupby <-  function(filenm,var,x_desc) {
ggplot(aes(x = var), data = filenm) +
geom_bar() +
facet_wrap(~filenm$city,ncol=2) +
ggtitle(paste('Number of trips by City and',x_desc)) +
ylab('Number of Trips') +
xlab(x_desc)
}
# function that uses the histogram plot function to create charts
chart1 <- function(filenm,var,bin_width=1,break_no=31,x_desc,citynm='all',
groupby=FALSE){
if (citynm %in% c('New York','Washington','Chicago')){
filenm <- subset(filenm,select = (city==citynm))
print(citynm)
}
if (class(var) %in% c("integer","numeric")){
if (groupby == 'TRUE') {
Hist_cont_groupby(filenm,var,bin_width=1,break_no=31,x_desc)
} else {Hist_cont(filenm,var,bin_width=1,break_no=31,x_desc)
}
}
else if (class(var) == "character"){
if (groupby == 'TRUE') {
Hist_disc_groupby(filenm,var,x_desc)
} else {Hist_disc(filenm,var,x_desc)}
}
# return()
}
# create a histogram plot for the variable month in each city
chart1(filenm=cities3,var=cities3$month,bin_width=1,break_no=6,x_desc='Month',
groupby=TRUE)
# lets see what would happen if we left the row with the NA value
# in the month variable in the dataset
# create a histogram plot for the variable month in each city
chart1(filenm=cities3_orig,var=cities3_orig$month,bin_width=1,break_no=6,
x_desc='Month',groupby=TRUE)
# create a histogram plot for the variable month
chart1(filenm=cities3,var=cities3$month,bin_width=1,break_no=6,
x_desc='Month',groupby=FALSE)
# create a histogram plot for the variable weekday in each city
chart1(filenm=cities3,var=cities3$weekday,x_desc='Week Day',
groupby=TRUE)
# create a histogram plot for the variable weekday
chart1(filenm=cities3,var=cities3$weekday,x_desc='Week Day',
groupby=FALSE)
# create a histogram plot for the variable weekday for Chicago only
temp  <- cities3[cities3$city == "Chicago",]
ggplot(aes(x = weekday), data = temp) +
geom_bar() +
coord_cartesian(ylim = c(1000,1400)) +
ggtitle(paste('Chicago - Number of trips by week day')) +
ylab('Number of Trips') +
xlab('Week Day')
# create a histogram plot for the variable hour in each city
chart1(filenm=cities3,var=cities3$hour,bin_width=1,break_no=24,
x_desc='Hour',groupby=TRUE)
# create a histogram plot for the variable hour
chart1(filenm=cities3,var=cities3$hour,bin_width=1,break_no=24,
x_desc='Hour',groupby=FALSE)
# remove one row where there are NAs values in the month field
dim(cities3_orig)
cities3 <- subset(cities3_orig,!is.na(cities3_orig$Trip.Duration))
dim(cities3)
# create a histogram plot for the variable weekday for Chicago only
temp  <- cities3[cities3$city == "Chicago",]
ggplot(aes(x = weekday), data = temp) +
geom_bar() +
coord_cartesian(ylim = c(1000,1400)) +
ggtitle(paste('Chicago - Number of trips by week day')) +
ylab('Number of Trips') +
xlab('Week Day')
########################################### start add new r code ########
# could use the function as follows:
chart1(filenm=cities3[cities3$city == "Chicago",],var=cities3[cities3$city == "Chicago",]$weekday,x_desc='Week Day',
groupby=TRUE)
########################################### start add new r code ########
# could use the function as follows:
temp  <- cities3[cities3$city == "Chicago",]
chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE)
# or could have used the following code:
chart1(filenm=cities3[cities3$city == "Chicago",],var=cities3[cities3$city == "Chicago",]$weekday,x_desc='Week Day',
groupby=TRUE)
# or three cities separately as follows:
name_of_cities
for (i in name_of_cities){
print(i)
}
# or three cities separately as follows:
for (i in name_of_cities){
print(i)
temp  <- cities3[cities3$city == i,]
chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE)
}
# or the statistics for the three cities separately as follows:
for (i in name_of_cities){
print(i)
temp  <- cities3[cities3$city == i,]
chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE)
}
########################################### start add new r code ########
# could use the function as follows:
temp  <- cities3[cities3$city == "Chicago",]
chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE)
# or could have used the following code:
chart1(filenm=cities3[cities3$city == "Chicago",],var=cities3[cities3$city == "Chicago",]$weekday,x_desc='Week Day',
groupby=TRUE)
# or the statistics for the three cities separately as follows:
for (i in name_of_cities){
print(i)
temp  <- cities3[cities3$city == i,]
print(chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE))
}
# For comparison, lets chart for the week day counts for Washington:
chart1(filenm=cities3[cities3$city == "Washington",],var=cities3[cities3$city == "Washington",]$weekday,x_desc='Week Day',
groupby=TRUE)
# create a histogram plot for the variable weekday for Chicago only
temp  <- cities3[cities3$city == "Chicago",]
ggplot(aes(x = weekday), data = temp) +
geom_bar() +
coord_cartesian(ylim = c(1000,1400)) +
ggtitle(paste('Chicago - Number of trips by week day')) +
ylab('Number of Trips') +
xlab('Week Day')
########################################### start add new r code ########
# additional 1: could use the function to chart the week day counts for Chicago as follows:
temp  <- cities3[cities3$city == "Chicago",]
chart1(filenm=temp,var=temp$weekday,x_desc='Week Day',
groupby=TRUE)
# additional 2: or could have used the following code to chart the week day counts for Chicago:
chart1(filenm=cities3[cities3$city == "Chicago",],var=cities3[cities3$city == "Chicago",]$weekday,x_desc='Week Day',
groupby=TRUE)
# additional 3: For comparison, lets chart for the week day counts for Washington:
chart1(filenm=cities3[cities3$city == "Washington",],var=cities3[cities3$city == "Washington",]$weekday,x_desc='Week Day',
groupby=TRUE)
